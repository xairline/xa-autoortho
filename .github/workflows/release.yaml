name: Release

# Controls when the workflow will run
on:
  push:
    #    branches: [ main ]
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-intel:
    # The type of runner that the job will run on
    runs-on: macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Setup
        run: |
          brew install python-tk@3.12
          root=$(pwd)
          cd autoortho
          python3.12 -m pip install -U -r requirements.txt
          python3.12 -m pip install -U -r requirements-build.txt
          pyinstaller autoortho.spec
          cd $root

      - run: |
          root=$(pwd)
          mkdir -p ${{ github.workspace }}/build/XA-autoortho/
          cp autoortho/dist/autoortho_fuse ${{ github.workspace }}/build/XA-autoortho/
          cp autoortho/dist/autoortho ${{ github.workspace }}/build/XA-autoortho/

      - name: Upload x86_64 Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: x86_64_artifacts
          path: build/XA-autoortho/

  build-arm:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Setup
        run: |
          brew install python-tk@3.12
          root=$(pwd)
          cd autoortho
          python3.12 -m pip install -U -r requirements.txt
          python3.12 -m pip install -U -r requirements-build.txt
          pyinstaller autoortho.spec
          cd $root

      - run: |
          root=$(pwd)
          mkdir -p ${{ github.workspace }}/build/XA-autoortho/
          cp autoortho/dist/autoortho_fuse ${{ github.workspace }}/build/XA-autoortho/
          cp autoortho/dist/autoortho ${{ github.workspace }}/build/XA-autoortho/

      - name: Upload x86_64 Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: arm64_artifacts
          path: build/XA-autoortho/

  combine-binaries:
    name: Combine Binaries and Create Release
    needs:
      - build-intel
      - build-arm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18' # The Go version to download (if necessary) and use.
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-mod-
      - run: |
          go mod tidy
          make mac -j 3
          rm -f ${{ github.workspace }}/build/XA-autoortho/mac_arm.xpl ${{ github.workspace }}/build/XA-autoortho/mac_amd.xpl
      - name: Download x86_64 Artifacts
        uses: actions/download-artifact@v3
        with:
          name: x86_64_artifacts
          path: x86_64_build

      - name: Download arm64 Artifacts
        uses: actions/download-artifact@v3
        with:
          name: arm64_artifacts
          path: arm64_build

      - name: Combine Go Binaries into Universal Binary
        run: |
          TAG=${GITHUB_REF##*/}
          mkdir -p build/XA-autoortho
          cp x86_64_build/autoortho build/XA-autoortho/autoortho
          cp x86_64_build/autoortho_fuse build/XA-autoortho/autoortho_fuse
          cp perm.sh build/XA-autoortho/
          cd build
          chmod +x XA-autoortho/autoortho
          chmod +x XA-autoortho/autoortho_fuse
          zip -r xa-autoortho_x86.zip XA-autoortho
          mkdir -p ${{ github.workspace }}/release/xa-autoortho/x86
          cp -r XA-autoortho/* ${{ github.workspace }}/release/xa-autoortho/x86
          cp ${{ github.workspace }}/skunkcrafts_updater.cfg ${{ github.workspace }}/release/xa-autoortho/x86
          sed -i '' "s/REPLACE_ME/${TAG}/g" ${{ github.workspace }}/release/xa-autoortho/x86/skunkcrafts_updater.cfg
          sed -i '' "s/@ARCH@/x86/g" ${{ github.workspace }}/release/xa-autoortho/x86/skunkcrafts_updater.cfg
          RELEASE_FOLDER=${{ github.workspace }}/release/xa-autoortho/x86
          find ${RELEASE_FOLDER}/ -type f ! \( -name '*skunkcrafts_updater*' -o -path '*skunkcrafts_updater*' \) -print0 | while IFS= read -r -d '' file; do
            checksum_hex=$(crc32 "$file")
            # Convert hex checksum to uint32 decimal
            checksum_decimal=$((16#$checksum_hex))
            # Remove "release/" prefix from $file
            modified_file="${file#${RELEASE_FOLDER}/}"
            modified_file="${modified_file#/}"
            echo "$modified_file|$checksum_decimal" >> ${RELEASE_FOLDER}/skunkcrafts_updater_whitelist.txt
          done
          touch ${RELEASE_FOLDER}/skunkcrafts_updater_blacklist.txt
          
          # pack arm64
          cp ../arm64_build/autoortho XA-autoortho/autoortho
          cp ../arm64_build/autoortho_fuse XA-autoortho/autoortho_fuse
          chmod +x XA-autoortho/autoortho
          chmod +x XA-autoortho/autoortho_fuse
          zip -r xa-autoortho_arm.zip XA-autoortho
          mkdir -p ${{ github.workspace }}/release/xa-autoortho/arm
          cp -r XA-autoortho/* ${{ github.workspace }}/release/xa-autoortho/arm
          cp ${{ github.workspace }}/skunkcrafts_updater.cfg ${{ github.workspace }}/release/xa-autoortho/arm
          sed -i '' "s/REPLACE_ME/${TAG}/g" ${{ github.workspace }}/release/xa-autoortho/arm/skunkcrafts_updater.cfg
          sed -i '' "s/@ARCH@/arm/g" ${{ github.workspace }}/release/xa-autoortho/arm/skunkcrafts_updater.cfg
          RELEASE_FOLDER=${{ github.workspace }}/release/xa-autoortho/arm
          find ${RELEASE_FOLDER}/ -type f ! \( -name '*skunkcrafts_updater*' -o -path '*skunkcrafts_updater*' \) -print0 | while IFS= read -r -d '' file; do
            checksum_hex=$(crc32 "$file")
            # Convert hex checksum to uint32 decimal
            checksum_decimal=$((16#$checksum_hex))
            # Remove "release/" prefix from $file
            modified_file="${file#${RELEASE_FOLDER}/}"
            modified_file="${modified_file#/}"
            echo "$modified_file|$checksum_decimal" >> ${RELEASE_FOLDER}/skunkcrafts_updater_whitelist.txt
          done
          touch ${RELEASE_FOLDER}/skunkcrafts_updater_blacklist.txt
          
          # push to release branch
          git checkout -b release
          git config --global user.email "release@opensam.com"
          git config --global user.name "GH Release"
          git add -f ${{ github.workspace }}/release/
          git commit -m "Release ${VERSION}"
          git push -f -u origin release

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ${{ github.workspace }}/README.md
          files: |
            ${{ github.workspace }}/build/xa-autoortho_x86.zip
            ${{ github.workspace }}/build/xa-autoortho_arm.zip
          prerelease: ${{ contains(github.ref_name, '-') }}